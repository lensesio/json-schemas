{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Lenses Provisioning",
  "type": "object",
  "properties": {
    "lensesHq": {
      "type": "object",
      "description": "Lenses HQ connection(s).",
      "properties": {
        "name": {
          "type": "string",
          "description": "Lenses HQ connection name.",
          "enum": [
            "lenses-hq"
          ],
          "default": "lenses-hq"
        },
        "version": {
          "type": "integer",
          "description": "Lenses HQ connection version.",
          "default": 1
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags for this Lenses HQ connection.",
          "default": []
        },
        "configuration": {
          "type": "object",
          "description": "Lenses HQ connection configuration.",
          "properties": {
            "server": {
              "type": "object",
              "description": "Lenses HQ server address.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Server address."
                }
              },
              "required": [
                "value"
              ]
            },
            "port": {
              "type": "object",
              "description": "Lenses HQ server port.",
              "properties": {
                "value": {
                  "type": "integer",
                  "description": "Server port."
                }
              },
              "required": [
                "value"
              ]
            },
            "agentKey": {
              "type": "object",
              "description": "Agent key for authentication.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Agent key value."
                }
              },
              "required": [
                "value"
              ]
            },
            "sslEnabled": {
              "type": "object",
              "description": "Enable SSL for HQ connection.",
              "properties": {
                "value": {
                  "type": "boolean",
                  "description": "SSL enabled flag."
                }
              },
              "required": [
                "value"
              ]
            },
            "sslTruststore": {
              "type": "object",
              "description": "Path to the truststore file.",
              "properties": {
                "file": {
                  "type": "string",
                  "description": "File path to truststore."
                }
              },
              "required": [
                "file"
              ]
            },
            "sslTruststorePassword": {
              "type": "object",
              "description": "Truststore password.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Password for truststore."
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "required": [
            "server",
            "port",
            "agentKey"
          ]
        }
      },
      "required": [
        "name",
        "version",
        "configuration"
      ]
    },
    "kafka": {
      "type": "object",
      "description": "Kafka connection",
      "properties": {
        "name": {
          "type": "string",
          "description": "Cluster name.",
          "enum": [
            "kafka"
          ],
          "default": "kafka"
        },
        "version": {
          "type": "integer",
          "description": "Kafka version.",
          "default": 1
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags for this cluster.",
          "default": []
        },
        "configuration": {
          "type": "object",
          "description": "Kafka connection configuration.",
          "properties": {
            "kafkaBootstrapServers": {
              "type": "object",
              "description": "Kafka bootstrap servers.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of bootstrap servers."
                }
              },
              "required": [
                "value"
              ]
            },
            "protocol": {
              "type": "object",
              "description": "Kafka protocol.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Protocol value (e.g. SASL_SSL, PLAINTEXT, etc.)",
                  "enum": [
                    "AWS_MSK_IAM",
                    "SASL_PLAINTEXT",
                    "SASL_SSL",
                    "PLAINTEXT"
                  ]
                }
              },
              "required": [
                "value"
              ]
            },
            "sslTruststore": {
              "type": "object",
              "description": "Path to the truststore file.",
              "properties": {
                "file": {
                  "type": "string",
                  "description": "File path to truststore."
                }
              },
              "required": [
                "file"
              ]
            },
            "sslTruststorePassword": {
              "type": "object",
              "description": "Truststore password.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Password for truststore."
                }
              },
              "required": [
                "value"
              ]
            },
            "sslKeystore": {
              "type": "object",
              "description": "Path to the keystore file.",
              "properties": {
                "file": {
                  "type": "string",
                  "description": "File path to keystore."
                }
              },
              "required": [
                "file"
              ]
            },
            "sslKeyPassword": {
              "type": "object",
              "description": "Key password.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Password for key."
                }
              },
              "required": [
                "value"
              ]
            },
            "sslKeystorePassword": {
              "type": "object",
              "description": "Keystore password.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Password for keystore."
                }
              },
              "required": [
                "value"
              ]
            },
            "saslMechanism": {
              "type": "object",
              "description": "SASL mechanism.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "SASL mechanism (PLAIN, SCRAM-SHA-256, SCRAM-SHA-512).",
                  "enum": [
                    "AWS_MSK_IAM",
                    "PLAIN",
                    "SCRAM-SHA-256",
                    "SCRAM-SHA-512"
                  ]
                }
              },
              "required": [
                "value"
              ]
            },
            "saslJaasConfig": {
              "type": "object",
              "description": "SASL JAAS config string.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "JAAS config string."
                }
              },
              "required": [
                "value"
              ],
              "multiline": true
            },
            "additionalProperties": {
              "type": "object",
              "description": "Additional configuration properties for Kafka client.",
              "properties": {
                "value": {
                  "type": "object",
                  "description": "Arbitrary key-value pairs for additional Kafka client properties.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsPort": {
              "type": "object",
              "description": "Port for metrics collection.",
              "properties": {
                "value": {
                  "type": "integer",
                  "description": "Port number for metrics collection."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsType": {
              "type": "object",
              "description": "Type of metrics to collect (e.g., 'JMX', 'JOLOKIAG', 'JOLOKIAP', 'AWS').",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Metrics type value.",
                  "enum": [
                    "JOLOKIAG",
                    "JOLOKIAP",
                    "JMX",
                    "AWS"
                  ]
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsSsl": {
              "type": "object",
              "description": "Enable SSL for metrics collection.",
              "properties": {
                "value": {
                  "type": "boolean",
                  "description": "SSL enabled flag."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsUsername": {
              "type": "object",
              "description": "Username for metrics authentication.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Username value."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsPassword": {
              "type": "object",
              "description": "Password for metrics authentication.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Password value."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsHttpSuffix": {
              "type": "object",
              "description": "Custom HTTP suffix for metrics endpoint (e.g., '/jolokia/').",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "HTTP suffix value."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsHttpTimeout": {
              "type": "object",
              "description": "HTTP request timeout in milliseconds for metrics collection.",
              "properties": {
                "value": {
                  "type": "integer",
                  "description": "Timeout value in milliseconds."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsCustomUrlMappings": {
              "type": "object",
              "description": "Custom URL mappings for metrics collection per broker/node/worker.",
              "properties": {
                "value": {
                  "type": "object",
                  "description": "Map of custom URL mappings.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "required": [
            "kafkaBootstrapServers"
          ]
        }
      },
      "required": [
        "name",
        "version",
        "configuration"
      ]
    },
    "zookeeper": {
      "type": "object",
      "description": "Zookeeper cluster.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Zookeeper name.",
          "enum": [
            "zookeeper"
          ],
          "default": "zookeeper"
        },
        "version": {
          "type": "integer",
          "description": "Zookeeper version.",
          "default": 1
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags for this Zookeeper.",
          "default": []
        },
        "configuration": {
          "type": "object",
          "description": "Zookeeper connection configuration.",
          "properties": {
            "zookeeperUrls": {
              "type": "object",
              "description": "Zookeeper connection URLs.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of Zookeeper URLs."
                }
              },
              "required": [
                "value"
              ]
            },
            "zookeeperChrootPath": {
              "type": "object",
              "description": "Optional suffix to Zookeeper's connection string.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Chroot path value."
                }
              },
              "required": [
                "value"
              ]
            },
            "zookeeperSessionTimeout": {
              "type": "object",
              "description": "Zookeeper session timeout in milliseconds.",
              "properties": {
                "value": {
                  "type": "integer",
                  "description": "Timeout value in milliseconds."
                }
              },
              "required": [
                "value"
              ]
            },
            "zookeeperConnectionTimeout": {
              "type": "object",
              "description": "Zookeeper connection timeout in milliseconds.",
              "properties": {
                "value": {
                  "type": "integer",
                  "description": "Timeout value in milliseconds."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsPort": {
              "type": "object",
              "description": "Port for metrics collection.",
              "properties": {
                "value": {
                  "type": "integer",
                  "description": "Port number."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsType": {
              "type": "object",
              "description": "Type of metrics to collect.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Metrics type (e.g., 'JMX')."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsSsl": {
              "type": "object",
              "description": "Enable SSL for metrics collection.",
              "properties": {
                "value": {
                  "type": "boolean",
                  "description": "SSL enabled flag."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsHttpSuffix": {
              "type": "object",
              "description": "Custom HTTP suffix for metrics endpoint (e.g., '/jolokia/').",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "HTTP suffix value."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsHttpTimeout": {
              "type": "object",
              "description": "HTTP request timeout in milliseconds for metrics collection.",
              "properties": {
                "value": {
                  "type": "integer",
                  "description": "Timeout value in milliseconds."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsCustomUrlMappings": {
              "type": "object",
              "description": "Custom URL mappings for metrics collection per broker/node/worker.",
              "properties": {
                "value": {
                  "type": "object",
                  "description": "Map of custom URL mappings.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "required": [
            "zookeeperUrls"
          ]
        }
      },
      "required": [
        "name",
        "version",
        "configuration"
      ]
    },
    "confluentSchemaRegistry": {
      "type": "object",
      "description": "Confluent Schema Registry services.",
      "default": {},
      "properties": {
        "name": {
          "type": "string",
          "description": "Schema Registry name.",
          "enum": [
            "schema-registry"
          ],
          "default": "schema-registry"
        },
        "version": {
          "type": "integer",
          "description": "Schema Registry version.",
          "default": 1
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags for this Schema Registry.",
          "default": []
        },
        "configuration": {
          "type": "object",
          "description": "Schema Registry connection configuration.",
          "properties": {
            "schemaRegistryUrls": {
              "type": "object",
              "description": "Schema Registry URLs.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of Schema Registry URLs. Must include scheme (http/https)."
                }
              },
              "required": [
                "value"
              ]
            },
            "username": {
              "type": "object",
              "description": "Username for Basic Auth.",
              "properties": {
                "value": {
                  "type": "string"
                }
              }
            },
            "password": {
              "type": "object",
              "description": "Password for Basic Auth.",
              "properties": {
                "value": {
                  "type": "string"
                }
              }
            },
            "sslTruststore": {
              "type": "object",
              "description": "Custom truststore for TLS.",
              "properties": {
                "fileRef": {
                  "type": "object",
                  "properties": {
                    "filePath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "filePath"
                  ]
                }
              }
            },
            "sslTruststorePassword": {
              "type": "object",
              "description": "Password for truststore.",
              "properties": {
                "value": {
                  "type": "string"
                }
              }
            },
            "sslKeystore": {
              "type": "object",
              "description": "Custom keystore for TLS client authentication.",
              "properties": {
                "fileRef": {
                  "type": "object",
                  "properties": {
                    "filePath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "filePath"
                  ]
                }
              }
            },
            "sslKeystorePassword": {
              "type": "object",
              "description": "Password for keystore.",
              "properties": {
                "value": {
                  "type": "string"
                }
              }
            },
            "basicAuthCredentialsSource": {
              "type": "object",
              "description": "Source for the basic auth credentials.",
              "properties": {
              "value": {
                "type": "string",
                "enum": [
                "URL",
                "USER_INFO",
                "SASL_INHERIT"
                ]
              }
              }
            },
            "basicAuthUserInfo": {
              "type": "object",
              "description": "Basic auth user information.",
              "properties": {
                "value": {
                  "type": "string"
                }
              }
            },
            "hardDelete": {
              "type": "object",
              "description": "Enable hard delete (default true).",
              "properties": {
                "value": {
                  "type": "boolean"
                }
              }
            },
            "metricsPort": {
              "type": "object",
              "description": "Port for metrics collection.",
              "properties": {
                "value": {
                  "type": "integer",
                  "description": "Port number for metrics collection."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsType": {
              "type": "object",
              "description": "Type of metrics to collect (e.g., 'JMX', 'JOLOKIAG', 'JOLOKIAP', 'AWS').",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Metrics type value.",
                  "enum": [
                    "JOLOKIAG",
                    "JOLOKIAP",
                    "JMX",
                    "AWS"
                  ]
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsSsl": {
              "type": "object",
              "description": "Enable SSL for metrics collection.",
              "properties": {
                "value": {
                  "type": "boolean",
                  "description": "SSL enabled flag."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsUsername": {
              "type": "object",
              "description": "Username for metrics authentication.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Username value."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsPassword": {
              "type": "object",
              "description": "Password for metrics authentication.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Password value."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsHttpSuffix": {
              "type": "object",
              "description": "Custom HTTP suffix for metrics endpoint (e.g., '/jolokia/').",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "HTTP suffix value."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsHttpTimeout": {
              "type": "object",
              "description": "HTTP request timeout in milliseconds for metrics collection.",
              "properties": {
                "value": {
                  "type": "integer",
                  "description": "Timeout value in milliseconds."
                }
              },
              "required": [
                "value"
              ]
            },
            "metricsCustomUrlMappings": {
              "type": "object",
              "description": "Custom URL mappings for metrics collection per broker/node/worker.",
              "properties": {
                "value": {
                  "type": "object",
                  "description": "Map of custom URL mappings.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "value"
              ]
            },
            "additionalProperties": {
              "type": "object",
              "description": "Additional configuration properties for Schema registry client.",
              "properties": {
                "value": {
                  "type": "object",
                  "description": "Arbitrary key-value pairs for additional Schema registry properties.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "required": [
            "schemaRegistryUrls"
          ],
          "if": {
            "properties": {
              "basicAuthCredentialsSource": {
                "properties": {
                  "value": {
                    "enum": ["USER_INFO", "URL"]
                  }
                }
              }
            },
            "required": ["basicAuthCredentialsSource"]
          },
          "then": {
            "required": ["basicAuthUserInfo"]
          }
        }
      },
      "required": [
        "name",
        "version",
        "configuration"
      ]
    },
    "glueSchemaRegistry": {
      "type": "object",
      "description": "AWS Glue Schema Registry connections.",
      "default": {},
      "properties": {
        "name": {
          "type": "string",
          "description": "Glue Schema Registry connection name.",
          "enum": [
            "schema-registry"
          ],
          "default": "schema-registry"
        },
        "version": {
          "type": "integer",
          "description": "Glue Schema Registry version.",
          "default": 1
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags for this Glue Schema Registry.",
          "default": []
        },
        "configuration": {
          "type": "object",
          "description": "Glue Schema Registry connection configuration.",
          "properties": {
            "authMode": {
              "type": "object",
              "description": "Reference to AWS connection for auth mode.",
              "properties": {
                "reference": {
                  "type": "string"
                }
              },
              "required": [
                "reference"
              ]
            },
            "accessKeyId": {
              "type": "object",
              "description": "Reference to AWS connection for access key.",
              "properties": {
                "reference": {
                  "type": "string"
                }
              },
              "required": [
                "reference"
              ]
            },
            "secretAccessKey": {
              "type": "object",
              "description": "Reference to AWS connection for secret access key.",
              "properties": {
                "reference": {
                  "type": "string"
                }
              },
              "required": [
                "reference"
              ]
            },
            "assumeRoleArn": {
              "type": "object",
              "description": "Reference to AWS connection for assume role ARN.",
              "properties": {
                "reference": {
                  "type": "string"
                }
              },
              "required": [
                "reference"
              ]
            },
            "assumeRoleSessionName": {
              "type": "object",
              "description": "Reference to AWS connection for assume role session name.",
              "properties": {
                "reference": {
                  "type": "string"
                }
              },
              "required": [
                "reference"
              ]
            },
            "glueRegistryArn": {
              "type": "object",
              "description": "Glue Registry ARN.",
              "properties": {
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "required": [
            "authMode",
            "glueRegistryArn"
          ]
        }
      },
      "required": [
        "name",
        "version",
        "configuration"
      ]
    },
    "connect": {
      "type": "array",
      "description": "Kafka Connect clusters.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Connect cluster name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "connect"
          },
          "version": {
            "type": "integer",
            "description": "Connect version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this Connect cluster.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Kafka Connect connection configuration.",
            "properties": {
              "workers": {
                "type": "object",
                "description": "Connect worker URLs.",
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of Connect worker URLs."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "username": {
                "type": "object",
                "description": "Username for authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Username value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "password": {
                "type": "object",
                "description": "Password for authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Password value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "sslKeystore": {
                "type": "object",
                "description": "Path to the keystore file.",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "File path to keystore."
                  }
                },
                "required": [
                  "file"
                ]
              },
              "sslKeystorePassword": {
                "type": "object",
                "description": "Keystore password.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Password for keystore."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "metricsPort": {
                "type": "object",
                "description": "Port for metrics collection.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Port number for metrics collection."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "metricsType": {
                "type": "object",
                "description": "Type of metrics to collect (e.g., 'JMX', 'JOLOKIAG', 'JOLOKIAP', 'AWS').",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Metrics type value.",
                    "enum": [
                      "JOLOKIAG",
                      "JOLOKIAP",
                      "JMX",
                      "AWS"
                    ]
                  }
                },
                "required": [
                  "value"
                ]
              },
              "metricsSsl": {
                "type": "object",
                "description": "Enable SSL for metrics collection.",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "SSL enabled flag."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "metricsUsername": {
                "type": "object",
                "description": "Username for metrics authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Username value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "metricsPassword": {
                "type": "object",
                "description": "Password for metrics authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Password value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "metricsHttpSuffix": {
                "type": "object",
                "description": "Custom HTTP suffix for metrics endpoint (e.g., '/jolokia/').",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "HTTP suffix value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "metricsHttpTimeout": {
                "type": "object",
                "description": "HTTP request timeout in milliseconds for metrics collection.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Timeout value in milliseconds."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "metricsCustomUrlMappings": {
                "type": "object",
                "description": "Custom URL mappings for metrics collection per broker/node/worker.",
                "properties": {
                  "value": {
                    "type": "object",
                    "description": "Map of custom URL mappings.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "value"
                ]
              },
              "sslAlgorthrim": {
                "type": "object",
                "description": "Name of the SSL algorthrim.",
                "properties": {
                  "value": {
                    "type": "string"
                  }
                },
                "default": "X509",
                "required": [
                  "value"
                ]
              }
            }
          }
        },
        "required": [
          "name",
          "version",
          "configuration"
        ]
      }
    },
    "aws": {
      "type": "array",
      "description": "AWS integration for alerts and audits.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "AWS connection name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "aws"
          },
          "version": {
            "type": "integer",
            "description": "AWS connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this AWS connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "AWS connection configuration.",
            "properties": {
              "authMode": {
                "type": "object",
                "description": "AWS authentication mode.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Auth mode value.",
                    "enum": [
                      "Access Key",
                      "Credentials Chain",
                      "Assume Role"
                    ]
                  }
                },
                "required": [
                  "value"
                ]
              },
              "accessKeyId": {
                "type": "object",
                "description": "AWS access key ID.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Access key ID value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "secretAccessKey": {
                "type": "object",
                "description": "AWS secret access key.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Secret access key value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "region": {
                "type": "object",
                "description": "AWS region.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Region value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "sessionToken": {
                "type": "object",
                "description": "AWS session token.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Session token value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "assumeRoleArn": {
                "type": "object",
                "description": "AWS role ARN to assume.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Role ARN value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "assumeRoleSessionName": {
                "type": "object",
                "description": "AWS role session name.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Session name value."
                  }
                },
                "required": [
                  "value"
                ]
              }
            },
            "required": [
              "authMode"
            ]
          }
        },
        "required": [
          "name",
          "version",
          "configuration"
        ]
      }
    },
    "webhook": {
      "type": "array",
      "description": "Webhook integration for alerts and audits.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Webhook connection name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "webhook"
          },
          "version": {
            "type": "integer",
            "description": "Webhook connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this Webhook connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Webhook connection configuration.",
            "properties": {
              "host": {
                "type": "object",
                "description": "The host name for the HTTP Event Collector API.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Host value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "port": {
                "type": "object",
                "description": "The port number for the HTTP Event Collector API.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Port value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "useHttps": {
                "type": "object",
                "description": "Set to true in order to set the URL scheme to https. Will otherwise default to http.",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "Use HTTPS flag."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "creds": {
                "type": "object",
                "description": "An array of (secret) strings to be passed over to alert channel plugins.",
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of credential strings."
                  }
                },
                "required": [
                  "value"
                ]
              }
            },
            "required": [
              "host",
              "useHttps"
            ]
          }
        },
        "required": [
          "name",
          "version",
          "configuration"
        ]
      }
    },
    "datadog": {
      "type": "array",
      "description": "DataDog integration for alerts and audits.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "DataDog connection name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "datadog"
          },
          "version": {
            "type": "integer",
            "description": "DataDog connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this DataDog connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "DataDog connection configuration.",
            "properties": {
              "site": {
                "type": "object",
                "description": "The site URL for the DataDog API.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Site value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "apiKey": {
                "type": "object",
                "description": "The API key for authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "API key value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "applicationKey": {
                "type": "object",
                "description": "The application key for authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Application key value."
                  }
                },
                "required": [
                  "value"
                ]
              }
            }
          }
        },
        "required": [
          "name",
          "version",
          "configuration"
        ]
      }
    },
    "pagerduty": {
      "type": "array",
      "description": "PagerDuty integration for alerts and audits.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "PagerDuty connection name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "pagerduty"
          },
          "version": {
            "type": "integer",
            "description": "PagerDuty connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this PagerDuty connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "PagerDuty connection configuration.",
            "properties": {
              "integrationKey": {
                "type": "object",
                "description": "The integration key for authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Integration key value."
                  }
                },
                "required": [
                  "value"
                ]
              }
            }
          }
        },
        "required": [
          "name",
          "version",
          "configuration"
        ]
      }
    },
    "slack": {
      "type": "array",
      "description": "Slack integration for alerts and audits.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Slack connection name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "slack"
          },
          "version": {
            "type": "integer",
            "description": "Slack connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this Slack connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Slack connection configuration.",
            "properties": {
              "webhookUrl": {
                "type": "object",
                "description": "The webhook URL for the Slack API.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Webhook URL value."
                  }
                },
                "required": [
                  "value"
                ]
              }
            },
            "required": [
              "webhookUrl"
            ]
          }
        },
        "required": [
          "name",
          "version",
          "configuration"
        ]
      }
    },
    "splunk": {
      "type": "array",
      "description": "Splunk integration for alerts and audits.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Splunk connection name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "splunk"
          },
          "version": {
            "type": "integer",
            "description": "Splunk connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this Splunk connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Splunk connection configuration.",
            "properties": {
              "host": {
                "type": "object",
                "description": "The host name for the Splunk API.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Host value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "port": {
                "type": "object",
                "description": "The port number for the Splunk API.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Port value."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "useHttps": {
                "type": "object",
                "description": "Set to true in order to set the URL scheme to https. Will otherwise default to http.",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "Use HTTPS flag."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "insecure": {
                "type": "object",
                "description": "Set to true in order to disable SSL verification.",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "Insecure flag."
                  }
                },
                "required": [
                  "value"
                ]
              },
              "token": {
                "type": "object",
                "description": "The token for authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Token value."
                  }
                },
                "required": [
                  "value"
                ]
              }
            }
          }
        },
        "required": [
          "name",
          "version",
          "configuration"
        ]
      }
    },
    "alertManager": {
      "type": "array",
      "description": "Alert Manager integration for alerts.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Alert Manager connection name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "my-alertmanager-connection"
          },
          "version": {
            "type": "integer",
            "description": "Alert Manager connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this Alert Manager connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Alert Manager connection configuration.",
            "properties": {
              "endpoints": {
                "type": "object",
                "description": "Comma separated list of Alert Manager endpoints.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Endpoints value."
                  }
                },
                "required": [
                  "value"
                ]
              }
            },
            "required": [
              "endpoints"
            ],
            "defaultSnippets": [
              {
                "label": "Alert Manager (minimal)",
                "body": {
                  "endpoints": {
                    "value": "http://alertmanager1:9093,http://alertmanager2:9093"
                  }
                }
              }
            ]
          }
        },
        "required": [
          "name",
          "version",
          "configuration"
        ]
      }
    }
  },
  "defaultSnippets": [
    {
      "label": "HQ Connection",
      "body": {
        "lensesHq": {
          "name": "lenses-hq",
          "version": 1,
          "tags": [
            "hq"
          ],
          "configuration": {
            "server": {
              "value": "<YOUR LENSES HQ SERVER URL>"
            },
            "port": {
              "value": 10000
            },
            "agentKey": {
              "value": "<LENSES_HQ_AGENT_KEY>"
            }
          }
        }
      }
    },
    {
      "label": "HQ Connection TLS",
      "body": {
        "lensesHq": {
          "name": "lenses-hq",
          "version": 1,
          "tags": [
            "hq"
          ],
          "configuration": {
            "server": {
              "value": "<YOUR LENSES HQ SERVER URL>"
            },
            "port": {
              "value": 10000
            },
            "agentKey": {
              "value": "<LENSES_HQ_AGENT_KEY>"
            },
            "sslEnabled": {
              "value": true
            },
            "sslTruststore": {
              "file": "/mnt/provision-secrets/grpc/truststore.jks"
            },
            "sslTruststorePassword": {
              "value": "<LENSES_HQ_AGENT_TRUSTSTORE_PWD>"
            }
          }
        }
      }
    },
    {
      "label": "Kafka, Azure Eventhubs",
      "body": {
        "kafka": {
          "name": "kafka",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "kafkaBootstrapServers": {
              "value": [
                "SASL_SSL://demo-kafka:9092"
              ]
            },
            "protocol": {
              "value": "SASL_SSL"
            },
            "saslMechanism": {
              "value": "PLAIN"
            },
            "saslJaasConfig": {
              "value": "org.apache.kafka.common.security.plain.PlainLoginModule required username=\\\"$ConnectionString\\\" password=\\\"Endpoint=sb://[SB_URL]/;SharedAccessKeyName=[KEY_NAME];SharedAccessKey=[ACCESS_KEY]\\\";"
            }
          }
        }
      }
    },
    {
      "label": "Kafka, PLAINTEXT",
      "body": {
        "kafka": {
          "name": "kafka",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "kafkaBootstrapServers": {
              "value": [
                "PLAINTEXT://demo-kafka:9092"
              ]
            },
            "protocol": {
              "value": "PLAINTEXT"
            },
            "metricsPort": {
              "value": 9581
            },
            "metricsType": {
              "value": "JMX"
            },
            "metricsSsl": {
              "value": false
            },
            "metricsUsername": {
              "value": "jmxuser"
            },
            "metricsPassword": {
              "value": "jmxpass"
            }
          }
        }
      }
    },
    {
      "label": "Kafka, SASL_PLAINTEXT, PLAIN",
      "body": {
        "kafka": {
          "name": "kafka",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "kafkaBootstrapServers": {
              "value": [
                "SASL_PLAINTEXT://demo-kafka:9092"
              ]
            },
            "protocol": {
              "value": "SASL_PLAINTEXT"
            },
            "saslMechanism": {
              "value": "PLAIN"
            },
            "saslJaasConfig": {
              "value": "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"admin\" password=\"admin-secret\";"
            },
            "metricsPort": {
              "value": 9581
            },
            "metricsType": {
              "value": "JMX"
            },
            "metricsSsl": {
              "value": false
            },
            "metricsUsername": {
              "value": "jmxuser"
            },
            "metricsPassword": {
              "value": "jmxpass"
            },
            "httpRequestTimeout": {
              "value": 30000
            }
          }
        }
      }
    },
    {
      "label": "Kafka, SASL_PLAINTEXT, SCRAM-SHA-256",
      "body": {
        "kafka": {
          "name": "kafka",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "kafkaBootstrapServers": {
              "value": [
                "SASL_PLAINTEXT://demo-kafka:9092"
              ]
            },
            "protocol": {
              "value": "SASL_PLAINTEXT"
            },
            "saslMechanism": {
              "value": "SCRAM-SHA-256"
            },
            "saslJaasConfig": {
              "value": "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"admin\" password=\"admin-secret\";"
            },
            "metricsPort": {
              "value": 9581
            },
            "metricsType": {
              "value": "JMX"
            },
            "metricsSsl": {
              "value": false
            },
            "metricsUsername": {
              "value": "jmxuser"
            },
            "metricsPassword": {
              "value": "jmxpass"
            },
            "httpRequestTimeout": {
              "value": 30000
            }
          }
        }
      }
    },
    {
      "label": "Kafka, SASL_PLAINTEXT, SCRAM-SHA-512",
      "body": {
        "kafka": {
          "name": "kafka",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "kafkaBootstrapServers": {
              "value": [
                "SASL_PLAINTEXT://demo-kafka:9092"
              ]
            },
            "protocol": {
              "value": "SASL_PLAINTEXT"
            },
            "saslMechanism": {
              "value": "SCRAM-SHA-512"
            },
            "saslJaasConfig": {
              "value": "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"admin\" password=\"admin-secret\";"
            },
            "metricsPort": {
              "value": 9581
            },
            "metricsType": {
              "value": "JMX"
            },
            "metricsSsl": {
              "value": false
            },
            "metricsUsername": {
              "value": "jmxuser"
            },
            "metricsPassword": {
              "value": "jmxpass"
            },
            "httpRequestTimeout": {
              "value": 30000
            }
          }
        }
      }
    },
    {
      "label": "Kafka & Confluent Cloud, SASL_SSL, PLAIN",
      "body": {
        "kafka": {
          "name": "kafka",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "kafkaBootstrapServers": {
              "value": [
                "SASL_SSL://demo-kafka:9092"
              ]
            },
            "protocol": {
              "value": "SASL_SSL"
            },
            "sslTruststore": {
              "file": "/path/to/truststore.jks"
            },
            "sslTruststorePassword": {
              "value": "truststore-password"
            },
            "sslKeystore": {
              "file": "/path/to/keystore.jks"
            },
            "sslKeyPassword": {
              "value": "key-password"
            },
            "sslKeystorePassword": {
              "value": "keystore-password"
            },
            "saslMechanism": {
              "value": "PLAIN"
            },
            "saslJaasConfig": {
              "value": "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"admin\" password=\"admin-secret\";"
            },
            "metricsPort": {
              "value": 9581
            },
            "metricsType": {
              "value": "JMX"
            },
            "metricsSsl": {
              "value": true
            },
            "metricsUsername": {
              "value": "jmxuser"
            },
            "metricsPassword": {
              "value": "jmxpass"
            },
            "httpRequestTimeout": {
              "value": 30000
            }
          }
        }
      }
    },
    {
      "label": "Kafka, SASL_SSL, SCRAM-SHA-256",
      "body": {
        "kafka": {
          "name": "kafka",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "kafkaBootstrapServers": {
              "value": [
                "SASL_SSL://demo-kafka:9092"
              ]
            },
            "protocol": {
              "value": "SASL_SSL"
            },
            "saslMechanism": {
              "value": "SCRAM-SHA-256"
            },
            "saslJaasConfig": {
              "value": "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"admin\" password=\"admin-secret\";"
            },
            "sslTruststore": {
              "file": "/path/to/truststore.jks"
            },
            "sslTruststorePassword": {
              "value": "truststore-password"
            },
            "sslKeystore": {
              "file": "/path/to/keystore.jks"
            },
            "sslKeyPassword": {
              "value": "key-password"
            },
            "sslKeystorePassword": {
              "value": "keystore-password"
            },
            "metricsPort": {
              "value": 9581
            },
            "metricsType": {
              "value": "JMX"
            },
            "metricsSsl": {
              "value": true
            },
            "metricsUsername": {
              "value": "jmxuser"
            },
            "metricsPassword": {
              "value": "jmxpass"
            },
            "httpRequestTimeout": {
              "value": 30000
            }
          }
        }
      }
    },
    {
      "label": "Kafka, SASL_SSL, SCRAM-SHA-512",
      "body": {
        "kafka": {
          "name": "kafka",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "kafkaBootstrapServers": {
              "value": [
                "SASL_SSL://demo-kafka:9092"
              ]
            },
            "protocol": {
              "value": "SASL_SSL"
            },
            "saslMechanism": {
              "value": "SCRAM-SHA-512"
            },
            "saslJaasConfig": {
              "value": "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"admin\" password=\"admin-secret\";"
            },
            "sslTruststore": {
              "file": "/path/to/truststore.jks"
            },
            "sslTruststorePassword": {
              "value": "truststore-password"
            },
            "sslKeystore": {
              "file": "/path/to/keystore.jks"
            },
            "sslKeyPassword": {
              "value": "key-password"
            },
            "sslKeystorePassword": {
              "value": "keystore-password"
            },
            "metricsPort": {
              "value": 9581
            },
            "metricsType": {
              "value": "JMX"
            },
            "metricsSsl": {
              "value": true
            },
            "metricsUsername": {
              "value": "jmxuser"
            },
            "metricsPassword": {
              "value": "jmxpass"
            }
          }
        }
      }
    },
    {
      "label": "Kafka, IBM Event Streams",
      "body": {
        "kafka": {
          "name": "kafka",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "kafkaBootstrapServers": {
              "value": [
                "SASL_SSL://demo-kafka:9092"
              ]
            },
            "protocol": {
              "value": "SASL_SSL"
            },
            "saslMechanism": {
              "value": "PLAIN"
            },
            "saslJaasConfig": {
              "value": "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"token\" password=\"<API Key>\";"
            }
          }
        }
      }
    },
    {
      "label": "Kafka, AWS MSK",
      "body": {
        "kafka": {
          "name": "kafka",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "kafkaBootstrapServers": {
              "value": [
                "SASL_SSL://demo-kafka:9092"
              ]
            },
            "protocol": {
              "value": "SASL_SSL"
            },
            "sslTruststore": {
              "file": "/path/to/truststore.jks"
            },
            "sslTruststorePassword": {
              "value": "truststore-password"
            },
            "sslKeystore": {
              "file": "/path/to/keystore.jks"
            },
            "sslKeyPassword": {
              "value": "key-password"
            },
            "sslKeystorePassword": {
              "value": "keystore-password"
            },
            "saslMechanism": {
              "value": "AWS_MSK_IAM"
            },
            "saslJaasConfig": {
              "value": "software.amazon.msk.auth.iam.IAMLoginModule required;"
            },
            "additionalProperties": {
              "value": {
                "sasl.client.callback.handler.class": "software.amazon.msk.auth.iam.IAMClientCallbackHandler"
              }
            },
            "metricsPort": {
              "value": 9581
            },
            "metricsType": {
              "value": "JMX"
            },
            "metricsSsl": {
              "value": true
            },
            "metricsUsername": {
              "value": "jmxuser"
            },
            "metricsPassword": {
              "value": "jmxpass"
            }
          }
        }
      }
    },
    {
      "label": "Zookeeper",
      "body": {
        "zookeeper": {
          "name": "zookeeper",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "zookeeperUrls": {
              "value": [
                "localhost:2181"
              ]
            },
            "zookeeperChrootPath": {
              "value": "/mypath"
            },
            "zookeeperSessionTimeout": {
              "value": 10000
            },
            "zookeeperConnectionTimeout": {
              "value": 10000
            },
            "metricsPort": {
              "value": 9581
            },
            "metricsType": {
              "value": "JMX"
            },
            "metricsSsl": {
              "value": true
            }
          }
        }
      }
    },
    {
      "label": "Kafka Connect",
      "body": {
        "connect": [
          {
            "name": "connect",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "workers": {
                "value": [
                  "http://localhost:8083"
                ]
              },
              "username": {
                "value": "user"
              },
              "password": {
                "value": "pass"
              },
              "sslKeystore": {
                "file": "/path/to/keystore.jks"
              },
              "sslKeystorePassword": {
                "value": "password"
              },
              "metricsPort": {
                "value": 9581
              },
              "metricsType": {
                "value": "JMX"
              },
              "metricsSsl": {
                "value": true
              },
              "metricsUsername": {
                "value": "jmxuser"
              },
              "metricsPassword": {
                "value": "jmxpass"
              },
              "httpRequestTimeout": {
                "value": 30000
              }
            }
          }
        ]
      }
    },
    {
      "label": "Schema Registry, Confluent",
      "body": {
        "confluentSchemaRegistry": {
          "name": "schema-registry",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "schemaRegistryUrls": {
              "value": [
                "http://my-sr.host1:8081",
                "http://my-sr.host2:8081"
              ]
            },
            "username": {
              "value": "my-username"
            },
            "password": {
              "value": "my-password"
            },
            "sslTruststore": {
              "fileRef": {
                "filePath": "/path/to/my/truststore.jks"
              }
            },
            "sslTruststorePassword": {
              "value": "myPassword"
            },
            "sslKeystore": {
              "fileRef": {
                "filePath": "/path/to/my/keystore.jks"
              }
            },
            "sslKeystorePassword": {
              "value": "myPassword"
            }
          }
        }
      }
    },
    {
      "label": "Schema Registry, AWS Glue (Access Keys)",
      "body": {
        "aws": [
          {
            "name": "my-aws-connection-name",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "authMode": {
                "value": "accessKey"
              },
              "accessKeyId": {
                "value": "your-access-key-id"
              },
              "secretAccessKey": {
                "value": "your-secret-access-key"
              },
              "region": {
                "value": "us-west-2"
              }
            }
          }
        ],
        "glueSchemaRegistry": {
          "name": "schema-registry",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "authMode": {
              "reference": "my-aws-connection-name"
            },
            "accessKeyId": {
              "reference": "my-aws-connection-name"
            },
            "secretAccessKey": {
              "reference": "my-aws-connection-name"
            },
            "glueRegistryArn": {
              "value": "arn:aws:glue:your-region:your-account-id:registry/your-registry-name"
            }
          }
        }
      }
    },
    {
      "label": "Schema Registry, AWS Glue (Credentials chain)",
      "body": {
        "aws": [
          {
            "name": "my-aws-connection-name",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "authMode": {
                "value": "Credentials Chain"
              },
              "region": {
                "value": "us-west-2"
              }
            }
          }
        ],
        "glueSchemaRegistry": {
          "name": "schema-registry",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "authMode": {
              "reference": "my-aws-connection-name"
            },
            "glueRegistryArn": {
              "value": "arn:aws:glue:your-region:your-account-id:registry/your-registry-name"
            }
          }
        }
      }
    },
    {
      "label": "Schema Registry, AWS Glue (Assume Role)",
      "body": {
        "aws": [
          {
            "name": "my-aws-connection-name",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "authMode": {
                "value": "Assume Role"
              },
              "region": {
                "value": "us-west-2"
              },
              "assumeRoleArn": {
                "value": "arn:aws:iam::your-account-id:role/your-role-name"
              },
              "assumeRoleSessionName": {
                "value": "my-aws-session-name"
              }
            }
          }
        ],
        "glueSchemaRegistry": {
          "name": "schema-registry",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "authMode": {
              "reference": "my-aws-connection-name"
            },
            "assumeRoleArn": {
              "reference": "my-aws-connection-name"
            },
            "assumeRoleSessionName": {
              "reference": "my-aws-connection-name"
            },
            "glueRegistryArn": {
              "value": "arn:aws:glue:your-region:your-account-id:registry/your-registry-name"
            }
          }
        }
      }
    },
    {
      "label": "Schema Registry, IBM Event Streams",
      "body": {
        "confluentSchemaRegistry": {
          "name": "ibm-event-streams-schema-registry",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "schemaRegistryUrls": {
              "value": [
                "https://token:<API Key>@<Host>/confluent"
              ]
            }
          }
        }
      }
    },
    {
      "label": "Schema Registry, ApiCurio",
      "body": {
        "confluentSchemaRegistry": {
          "name": "apicurio-schema-registry",
          "version": 1,
          "tags": "[]",
          "configuration": {
            "schemaRegistryUrls": {
              "value": [
                "http://my-sr.host1:8081/apis/compact/v6"
              ]
            }
          }
        }
      }
    },
    {
      "label": "AWS Connection",
      "body": {
        "aws": [
          {
            "name": "my-aws-connection-name",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "authMode": {
                "value": "Credentials Chain"
              },
              "region": {
                "value": "us-west-2"
              }
            }
          }
        ]
      }
    },
    {
      "label": "Alerts & Audits, Webhook",
      "body": {
        "webhook": [
          {
            "name": "webhook",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "host": {
                "value": "webhook.example.com"
              },
              "port": {
                "value": 443
              },
              "useHttps": {
                "value": true
              },
              "creds": {
                "value": [
                  "credential1",
                  "credential2"
                ]
              }
            }
          }
        ]
      }
    },
    {
      "label": "Alerts, DataDog",
      "body": {
        "datadog": [
          {
            "name": "datadog",
            "version": "1",
            "tags": "[]",
            "configuration": {
              "site": {
                "value": "datadoghq.com"
              },
              "apiKey": {
                "value": "<YOUR_API_KEY>"
              },
              "applicationKey": {
                "value": "<YOUR_APPLICATION_KEY>"
              }
            }
          }
        ]
      }
    },
    {
      "label": "Alerts, PagerDuty",
      "body": {
        "pagerduty": [
          {
            "name": "pagerduty",
            "version": "1",
            "tags": "[]",
            "configuration": {
              "integrationKey": {
                "value": "<YOUR_INTEGRATION_KEY>"
              }
            }
          }
        ]
      }
    },
    {
      "label": "Alerts, Slack",
      "body": {
        "slack": [
          {
            "name": "slack",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "webhookUrl": {
                "value": "<YOUR_SLACK_WEBHOOK_URL>"
              }
            }
          }
        ]
      }
    },
    {
      "label": "Alerts & Audits, Splunk",
      "body": {
        "splunk": [
          {
            "name": "splunk",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "host": {
                "value": "splunk.example.com"
              },
              "port": {
                "value": 8089
              },
              "useHttps": {
                "value": true
              },
              "insecure": {
                "value": false
              },
              "token": {
                "value": "<YOUR_SPLUNK_TOKEN>"
              }
            }
          }
        ]
      }
    },
    {
      "label": "Alerts, Alert Manager",
      "body": {
        "alertmanager": [
          {
            "name": "my-alertmanager-connection",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "endpoints": {
                "value": "http://alertmanager1:9093,http://alertmanager2:9093"
              }
            }
          }
        ]
      }
    }
  ],
  "required": [
    "kafka",
    "lensesHq"
  ],
  "dependencies": {
    "glueSchemaRegistry": [
      "aws"
    ]
  }
}