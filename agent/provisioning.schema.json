{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Lenses Provisioning",
  "type": "object",
  "properties": {
    "lensesHq": {
      "type": "array",
      "description": "Lenses HQ connection(s).",
      "maxItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Lenses HQ connection name.",
            "enum": ["lenses-hq"],
            "default": "lenses-hq"
          },
          "version": {
            "type": "integer",
            "description": "Lenses HQ connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this Lenses HQ connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Lenses HQ connection configuration.",
            "properties": {
              "server": {
                "type": "object",
                "description": "Lenses HQ server address.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Server address."
                  }
                },
                "required": ["value"]
              },
              "port": {
                "type": "object",
                "description": "Lenses HQ server port.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Enter the Server port"
                  }
                },
                "required": ["value"]
              },
              "agentKey": {
                "type": "object",
                "description": "Agent key for authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the Agent key value (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "sslEnabled": {
                "type": "object",
                "description": "Enable SSL for HQ connection.",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "SSL enabled flag.",
                    "pattern": "^true|false$"
                  }
                },
                "required": ["value"]
              },
              "sslTruststore": {
                "type": "object",
                "description": "Unique truststore (JKS) file name in double quotes. Must end with .jks",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Enter a unique truststore (JKS) file name in double quotes. Must end with .jks",
                    "pattern": "^.*\\.jks$"
                  }
                },
                "required": ["file"]
              },
              "sslTruststorePassword": {
                "type": "object",
                "description": "Truststore password.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter a password for the truststore (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              }
            },
            "required": ["server", "port", "agentKey"]
          }
        },
        "required": ["name", "version", "configuration"]
      }
    },
    "kafka": {
      "type": "array",
      "description": "Kafka connection",
      "maxItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Cluster name.",
            "enum": ["kafka"],
            "default": "kafka"
          },
          "version": {
            "type": "integer",
            "description": "Kafka version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this cluster.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Kafka connection configuration.",
            "properties": {
              "kafkaBootstrapServers": {
                "type": "object",
                "description": "Kafka bootstrap servers.",
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^(SASL_PLAINTEXT|SASL_SSL|PLAINTEXT|SSL)://[^:]+:[0-9]+$",
                      "description": "Enter the bootstrap server URL with protocol prefix (e.g., 'SASL_SSL://broker:9092', 'PLAINTEXT://broker:9092')"
                    },
                    "description": "List of bootstrap servers with protocol prefixes."
                  }
                },
                "required": ["value"]
              },
              "protocol": {
                "type": "object",
                "description": "Kafka protocol.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the Protocol value (e.g. SASL_SSL, PLAINTEXT, etc.)",
                    "enum": ["SASL_PLAINTEXT", "SASL_SSL", "PLAINTEXT", "SSL"]
                  }
                },
                "required": ["value"]
              },
              "sslTruststore": {
                "type": "object",
                "description": "Unique truststore (JKS) file name in double quotes. Must end with .jks",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Enter a unique truststore (JKS) file name in double quotes. Must end with .jks",
                    "pattern": "^.*\\.jks$"
                  }
                },
                "required": ["file"]
              },
              "sslTruststorePassword": {
                "type": "object",
                "description": "Truststore password.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter a password for the truststore (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "sslKeystore": {
                "type": "object",
                "description": "Unique keystore (JKS) file name in double quotes. Must end with .jks",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Enter a unique keystore (JKS) file name in double quotes. Must end with .jks",
                    "pattern": "^.*\\.jks$"
                  }
                },
                "required": ["file"]
              },
              "sslKeyPassword": {
                "type": "object",
                "description": "Key password.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter key password (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "sslKeystorePassword": {
                "type": "object",
                "description": "Keystore password.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter a password for the keystore (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "saslMechanism": {
                "type": "object",
                "description": "SASL mechanism.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the SASL mechanism (PLAIN, SCRAM-SHA-256, SCRAM-SHA-512).",
                    "enum": [
                      "AWS_MSK_IAM",
                      "PLAIN",
                      "SCRAM-SHA-256",
                      "SCRAM-SHA-512"
                    ]
                  }
                },
                "required": ["value"]
              },
              "saslJaasConfig": {
                "type": "object",
                "description": "SASL JAAS config string.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the JAAS config string (non empty)."
                  }
                },
                "required": ["value"],
                "multiline": true
              },
              "additionalProperties": {
                "type": "object",
                "description": "Additional configuration properties for Kafka client.",
                "properties": {
                  "value": {
                    "type": "object",
                    "description": "Arbitrary key-value pairs for additional Kafka client properties.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": ["value"]
              },
              "metricsPort": {
                "type": "object",
                "description": "Port for metrics collection.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Enter the port number for metrics collection."
                  }
                },
                "required": ["value"]
              },
              "metricsType": {
                "type": "object",
                "description": "Enter the type of metrics to collect (e.g., 'JMX', 'JOLOKIAG', 'JOLOKIAP', 'AWS').",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter a metrics type value ('JMX', 'JOLOKIAG', 'JOLOKIAP', 'AWS')",
                    "enum": ["JOLOKIAG", "JOLOKIAP", "JMX", "AWS"]
                  }
                },
                "required": ["value"]
              },
              "metricsSsl": {
                "type": "object",
                "description": "Enable SSL for metrics collection.",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "SSL enabled flag.",
                    "pattern": "^true|false$"
                  }
                },
                "required": ["value"]
              },
              "metricsUsername": {
                "type": "object",
                "description": "Username for metrics authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the metrics username (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "metricsPassword": {
                "type": "object",
                "description": "Password for metrics authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the metrics password (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "metricsHttpSuffix": {
                "type": "object",
                "description": "Custom HTTP suffix for metrics endpoint (e.g., '/jolokia/').",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the HTTP suffix value."
                  }
                },
                "required": ["value"]
              },
              "metricsHttpTimeout": {
                "type": "object",
                "description": "HTTP request timeout in milliseconds for metrics collection.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Enter the Timeout value in milliseconds."
                  }
                },
                "required": ["value"]
              },
              "metricsCustomUrlMappings": {
                "type": "object",
                "description": "Custom URL mappings for metrics collection per broker/node/worker.",
                "properties": {
                  "value": {
                    "type": "object",
                    "description": "Enter the Map of custom URL mappings.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": ["value"]
              }
            },
            "required": ["kafkaBootstrapServers"],
            "allOf": [
              {
                "if": {
                  "properties": {
                    "protocol": {
                      "properties": {
                        "value": { "const": "PLAINTEXT" }
                      }
                    }
                  }
                },
                "then": {
                  "properties": {
                    "kafkaBootstrapServers": {
                      "properties": {
                        "value": {
                          "items": {
                            "pattern": "^PLAINTEXT://.*"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "if": {
                  "properties": {
                    "protocol": {
                      "properties": {
                        "value": { "const": "SSL" }
                      }
                    }
                  }
                },
                "then": {
                  "properties": {
                    "kafkaBootstrapServers": {
                      "properties": {
                        "value": {
                          "items": {
                            "pattern": "^SSL://.*"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "if": {
                  "properties": {
                    "protocol": {
                      "properties": {
                        "value": { "const": "SASL_PLAINTEXT" }
                      }
                    }
                  }
                },
                "then": {
                  "properties": {
                    "kafkaBootstrapServers": {
                      "properties": {
                        "value": {
                          "items": {
                            "pattern": "^SASL_PLAINTEXT://.*"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "if": {
                  "properties": {
                    "protocol": {
                      "properties": {
                        "value": { "const": "SASL_SSL" }
                      }
                    }
                  }
                },
                "then": {
                  "properties": {
                    "kafkaBootstrapServers": {
                      "properties": {
                        "value": {
                          "items": {
                            "pattern": "^SASL_SSL://.*"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "if": {
                  "properties": {
                    "protocol": {
                      "properties": {
                        "value": { "const": "AWS_MSK_IAM" }
                      }
                    }
                  }
                },
                "then": {
                  "properties": {
                    "kafkaBootstrapServers": {
                      "properties": {
                        "value": {
                          "items": {
                            "pattern": "^AWS_MSK_IAM://.*"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": ["name", "version", "configuration"]
      }
    },
    "zookeeper": {
      "type": "array",
      "description": "Zookeeper cluster.",
      "maxItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Zookeeper name.",
            "enum": ["zookeeper"],
            "default": "zookeeper"
          },
          "version": {
            "type": "integer",
            "description": "Zookeeper version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this Zookeeper.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Zookeeper connection configuration.",
            "properties": {
              "zookeeperUrls": {
                "type": "object",
                "description": "Zookeeper connection URLs.",
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of Zookeeper URLs."
                  }
                },
                "required": ["value"]
              },
              "zookeeperChrootPath": {
                "type": "object",
                "description": "Optional suffix to Zookeeper's connection string.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the Chroot path value."
                  }
                },
                "required": ["value"]
              },
              "zookeeperSessionTimeout": {
                "type": "object",
                "description": "Zookeeper session timeout in milliseconds.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Enter the Timeout value in milliseconds."
                  }
                },
                "required": ["value"]
              },
              "zookeeperConnectionTimeout": {
                "type": "object",
                "description": "Zookeeper connection timeout in milliseconds.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Enter the Timeout value in milliseconds."
                  }
                },
                "required": ["value"]
              },
              "metricsPort": {
                "type": "object",
                "description": "Port for metrics collection.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Enter the Port number."
                  }
                },
                "required": ["value"]
              },
              "metricsType": {
                "type": "object",
                "description": "Enter the type of metrics to collect (e.g., 'JMX', 'JOLOKIAG', 'JOLOKIAP).",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter a metrics type value ('JMX', 'JOLOKIAG', 'JOLOKIAP')",
                    "enum": ["JOLOKIAG", "JOLOKIAP", "JMX"]
                  }
                },
                "required": ["value"]
              },
              "metricsSsl": {
                "type": "object",
                "description": "Enable SSL for metrics collection.",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "SSL enabled flag."
                  }
                },
                "required": ["value"]
              },
              "metricsHttpSuffix": {
                "type": "object",
                "description": "Custom HTTP suffix for metrics endpoint (e.g., '/jolokia/').",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the HTTP suffix value."
                  }
                },
                "required": ["value"]
              },
              "metricsHttpTimeout": {
                "type": "object",
                "description": "HTTP request timeout in milliseconds for metrics collection.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Enter the Timeout value in milliseconds."
                  }
                },
                "required": ["value"]
              },
              "metricsCustomUrlMappings": {
                "type": "object",
                "description": "Custom URL mappings for metrics collection per broker/node/worker.",
                "properties": {
                  "value": {
                    "type": "object",
                    "description": "Enter the Map of custom URL mappings.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": ["value"]
              }
            },
            "required": ["zookeeperUrls"]
          }
        },
        "required": ["name", "version", "configuration"]
      }
    },
    "confluentSchemaRegistry": {
      "type": "array",
      "description": "Confluent Schema Registry services.",
      "maxItems": 1,
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Schema Registry name.",
            "enum": ["schema-registry"],
            "default": "schema-registry"
          },
          "version": {
            "type": "integer",
            "description": "Schema Registry version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this Schema Registry.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Schema Registry connection configuration.",
            "properties": {
              "schemaRegistryUrls": {
                "type": "object",
                "description": "Schema Registry URLs.",
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^(http|https)://[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*:[0-9]+(/.*)?$",
                      "description": "Schema Registry URL. Must include scheme (http/https), valid hostname, and port number. Format: http(s)://hostname:port[/path]"
                    },
                    "description": "Enter the Schema Registry URLs. Must include scheme (http/https), valid hostname, and port number. Format: http(s)://hostname:port[/path]"
                  }
                },
                "required": ["value"]
              },
              "username": {
                "type": "object",
                "description": "Username for Basic Auth.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the username (non empty).",
                    "pattern": "^.+$"
                  }
                }
              },
              "password": {
                "type": "object",
                "description": "Password for Basic Auth.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the password (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "sslTruststore": {
                "type": "object",
                "description": "Unique truststore (JKS) file name in double quotes. Must end with .jks",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Enter a unique truststore (JKS) file name in double quotes. Must end with .jks",
                    "pattern": "^.*\\.jks$"
                  }
                }
              },
              "sslTruststore": {
                "type": "object",
                "description": "Unique truststore (JKS) file name in double quotes. Must end with .jks",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Enter a unique truststore (JKS) file name in double quotes. Must end with .jks",
                    "pattern": "^.*\\.jks$"
                  }
                },
                "required": ["file"]
              },
              "sslTruststorePassword": {
                "type": "object",
                "description": "Password for truststore.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter a password for the truststore (non empty).",
                    "pattern": "^.+$"
                  }
                }
              },
              "sslKeystore": {
                "type": "object",
                "description": "Unique keystore (JKS) file name in double quotes. Must end with .jks",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Enter a unique keystore (JKS) file name in double quotes. Must end with .jks",
                    "pattern": "^.*\\.jks$"
                  }
                },
                "required": ["file"]
              },
              "sslKeystorePassword": {
                "type": "object",
                "description": "Password for the keystore.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter a password for the keystore (non empty).",
                    "pattern": "^.+$"
                  }
                }
              },
              "basicAuthCredentialsSource": {
                "type": "object",
                "description": "Source for the basic auth credentials.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter source for the basic auth credentials.",
                    "enum": ["URL", "USER_INFO", "SASL_INHERIT"]
                  }
                }
              },
              "basicAuthUserInfo": {
                "type": "object",
                "description": "Basic auth user information.",
                "properties": {
                  "value": {
                    "description": "Enter the basic auth user information (non empty).",
                    "type": "string",
                    "pattern": "^.+$"
                  }
                }
              },
              "hardDelete": {
                "type": "object",
                "description": "Enable hard delete (default true).",
                "properties": {
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "metricsPort": {
                "type": "object",
                "description": "Port for metrics collection.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Enter the port number for metrics collection."
                  }
                },
                "required": ["value"]
              },
              "metricsType": {
                "type": "object",
                "description": "Type of metrics to collect (e.g., 'JMX', 'JOLOKIAG', 'JOLOKIAP').",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the metrics type value ('JMX', 'JOLOKIAG', 'JOLOKIAP').",
                    "enum": ["JOLOKIAG", "JOLOKIAP", "JMX"]
                  }
                },
                "required": ["value"]
              },
              "metricsSsl": {
                "type": "object",
                "description": "Enable SSL for metrics collection.",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "SSL enabled flag.",
                    "pattern": "^true|false$"
                  }
                },
                "required": ["value"]
              },
              "metricsUsername": {
                "type": "object",
                "description": "Username for metrics authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the metrics username (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "metricsPassword": {
                "type": "object",
                "description": "Password for metrics authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the metrics password (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "metricsHttpSuffix": {
                "type": "object",
                "description": "Enter custom HTTP suffix for metrics endpoint (e.g., '/jolokia/').",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "HTTP suffix value."
                  }
                },
                "required": ["value"]
              },
              "metricsHttpTimeout": {
                "type": "object",
                "description": "Enter HTTP request timeout in milliseconds for metrics collection.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Timeout value in milliseconds."
                  }
                },
                "required": ["value"]
              },
              "metricsCustomUrlMappings": {
                "type": "object",
                "description": "Enter custom URL mappings for metrics collection per broker/node/worker.",
                "properties": {
                  "value": {
                    "type": "object",
                    "description": "Map of custom URL mappings.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": ["value"]
              },
              "additionalProperties": {
                "type": "object",
                "description": "Additional configuration properties for Schema registry client.",
                "properties": {
                  "value": {
                    "type": "object",
                    "description": "Arbitrary key-value pairs for additional Schema registry properties.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": ["value"]
              }
            },
            "required": ["schemaRegistryUrls"],
            "if": {
              "properties": {
                "basicAuthCredentialsSource": {
                  "properties": {
                    "value": {
                      "enum": ["USER_INFO", "URL"]
                    }
                  }
                }
              },
              "required": ["basicAuthCredentialsSource"]
            },
            "then": {
              "required": ["basicAuthUserInfo"]
            }
          }
        },
        "required": ["name", "version", "configuration"]
      }
    },
    "glueSchemaRegistry": {
      "type": "array",
      "description": "AWS Glue Schema Registry connections.",
      "maxItems": 1,
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Glue Schema Registry connection name.",
            "enum": ["schema-registry"],
            "default": "schema-registry"
          },
          "version": {
            "type": "integer",
            "description": "Glue Schema Registry version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this Glue Schema Registry.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Glue Schema Registry connection configuration.",
            "properties": {
              "authMode": {
                "type": "object",
                "description": "Reference to AWS connection for auth mode.",
                "properties": {
                  "reference": {
                    "type": "string",
                    "description": "Enter the reference to AWS connection for auth mode (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["reference"]
              },
              "accessKeyId": {
                "type": "object",
                "description": "Reference to AWS connection for access key.",
                "properties": {
                  "reference": {
                    "type": "string",
                    "description": "Enter the reference to AWS connection for access key (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["reference"]
              },
              "secretAccessKey": {
                "type": "object",
                "description": "Reference to AWS connection for secret access key.",
                "properties": {
                  "reference": {
                    "type": "string",
                    "description": "Enter the reference to AWS connection for secret access key (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["reference"]
              },
              "assumeRoleArn": {
                "type": "object",
                "description": "Reference to AWS connection for assume role ARN.",
                "properties": {
                  "reference": {
                    "type": "string",
                    "description": "Enter the reference to AWS connection for assume role ARN (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["reference"]
              },
              "assumeRoleSessionName": {
                "type": "object",
                "description": "Reference to AWS connection for assume role session name.",
                "properties": {
                  "reference": {
                    "type": "string",
                    "description": "Enter the reference to AWS connection for assume role session name (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["reference"]
              },
              "glueRegistryArn": {
                "type": "object",
                "description": "Glue Registry ARN.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the Glue Registry ARN (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              }
            },
            "required": ["authMode", "glueRegistryArn"]
          }
        },
        "required": ["name", "version", "configuration"]
      }
    },
    "connect": {
      "type": "array",
      "description": "Kafka Connect clusters.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Connect cluster name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "connect"
          },
          "version": {
            "type": "integer",
            "description": "Connect version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this Connect cluster.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Kafka Connect connection configuration.",
            "properties": {
              "workers": {
                "type": "object",
                "description": "Connect worker URLs.",
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^(http|https)://[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*:[0-9]+(/.*)?$",
                      "description": "Connect worker URL. Must include scheme (http/https), valid hostname, and port number. Format: http(s)://hostname:port[/path]"
                    },
                    "description": "Enter the Connect worker URLs. Must include scheme (http/https), valid hostname, and port number. Format: http(s)://hostname:port[/path]"
                  }
                },
                "required": ["value"]
              },
              "username": {
                "type": "object",
                "description": "Username for authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the username (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "password": {
                "type": "object",
                "description": "Password for authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the password (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "sslTruststore": {
                "type": "object",
                "description": "Unique truststore (JKS) file name in double quotes. Must end with .jks",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Enter a unique truststore (JKS) file name in double quotes. Must end with .jks",
                    "pattern": "^.*\\.jks$"
                  }
                },
                "required": ["file"]
              },
              "sslTruststorePassword": {
                "type": "object",
                "description": "Truststore password.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter a password for the truststore (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "sslKeystore": {
                "type": "object",
                "description": "Unique keystore (JKS) file name in double quotes. Must end with .jks",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Enter a unique keystore (JKS) file name in double quotes. Must end with .jks",
                    "pattern": "^.*\\.jks$"
                  }
                },
                "required": ["file"]
              },
              "sslKeystorePassword": {
                "type": "object",
                "description": "Keystore password.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter a password for the keystore (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "metricsPort": {
                "type": "object",
                "description": "Port for metrics collection.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Enter the port number for metrics collection."
                  }
                },
                "required": ["value"]
              },
              "metricsType": {
                "type": "object",
                "description": "Type of metrics to collect (e.g., 'JMX', 'JOLOKIAG', 'JOLOKIAP').",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the metrics type value ('JMX', 'JOLOKIAG', 'JOLOKIAP').",
                    "enum": ["JOLOKIAG", "JOLOKIAP", "JMX"]
                  }
                },
                "required": ["value"]
              },
              "metricsSsl": {
                "type": "object",
                "description": "Enable SSL for metrics collection.",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "SSL enabled flag.",
                    "pattern": "^true|false$"
                  }
                },
                "required": ["value"]
              },
              "metricsUsername": {
                "type": "object",
                "description": "Username for metrics authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the metrics username (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "metricsPassword": {
                "type": "object",
                "description": "Password for metrics authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the metrics password (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "metricsHttpSuffix": {
                "type": "object",
                "description": "Enter custom HTTP suffix for metrics endpoint (e.g., '/jolokia/').",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "HTTP suffix value."
                  }
                },
                "required": ["value"]
              },
              "metricsHttpTimeout": {
                "type": "object",
                "description": "Enter HTTP request timeout in milliseconds for metrics collection.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Timeout value in milliseconds."
                  }
                },
                "required": ["value"]
              },
              "metricsCustomUrlMappings": {
                "type": "object",
                "description": "Enter custom URL mappings for metrics collection per broker/node/worker.",
                "properties": {
                  "value": {
                    "type": "object",
                    "description": "Map of custom URL mappings.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": ["value"]
              },
              "sslAlgorthrim": {
                "type": "object",
                "description": "Name of the SSL algorithm.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the name of the SSL algorithm (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "default": "X509",
                "required": ["value"]
              }
            }
          }
        },
        "required": ["name", "version", "configuration"]
      }
    },
    "aws": {
      "type": "array",
      "description": "AWS integration for alerts and audits.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "AWS connection name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "aws"
          },
          "version": {
            "type": "integer",
            "description": "AWS connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this AWS connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "AWS connection configuration.",
            "properties": {
              "authMode": {
                "type": "object",
                "description": "AWS authentication mode.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the Auth mode value.",
                    "enum": ["Access Key", "Credentials Chain", "Assume Role"]
                  }
                },
                "required": ["value"]
              },
              "accessKeyId": {
                "type": "object",
                "description": "AWS access key ID.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the Access key ID value (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "secretAccessKey": {
                "type": "object",
                "description": "AWS secret access key.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the Secret access key value (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "region": {
                "type": "object",
                "description": "AWS region.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the Region value (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "sessionToken": {
                "type": "object",
                "description": "AWS session token.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the Session token value (non empty) .",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "assumeRoleArn": {
                "type": "object",
                "description": "AWS role ARN to assume.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the Role ARN value (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "assumeRoleSessionName": {
                "type": "object",
                "description": "AWS role session name.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the Session name value (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              }
            },
            "required": ["authMode"]
          }
        },
        "required": ["name", "version", "configuration"]
      }
    },
    "webhook": {
      "type": "array",
      "description": "Webhook integration for alerts and audits.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Webhook connection name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "webhook"
          },
          "version": {
            "type": "integer",
            "description": "Webhook connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this Webhook connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Webhook connection configuration.",
            "properties": {
              "host": {
                "type": "object",
                "description": "The host name for the HTTP Event Collector API.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Host value.",
                    "pattern": "^[a-zA-Z0-9-]+\\.[a-zA-Z]{2,}$"
                  }
                },
                "required": ["value"]
              },
              "port": {
                "type": "object",
                "description": "The port number for the HTTP Event Collector API.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Enter the port value.",
                    "pattern": "^[0-9]+$"
                  }
                },
                "required": ["value"]
              },
              "useHttps": {
                "type": "object",
                "description": "Set to true in order to set the URL scheme to https. Will otherwise default to http.",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "Use HTTPS flag."
                  }
                },
                "required": ["value"]
              },
              "creds": {
                "type": "object",
                "description": "An array of (secret) strings to be passed over to alert channel plugins.",
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Enter the credential string (non empty).",
                      "pattern": "^.+$"
                    },
                    "description": "Array of credential strings."
                  }
                },
                "required": ["value"]
              }
            },
            "required": ["host", "useHttps"]
          }
        },
        "required": ["name", "version", "configuration"]
      }
    },
    "datadog": {
      "type": "array",
      "description": "DataDog integration for alerts and audits.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "DataDog connection name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "datadog"
          },
          "version": {
            "type": "integer",
            "description": "DataDog connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this DataDog connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "DataDog connection configuration.",
            "properties": {
              "site": {
                "type": "object",
                "description": "The site URL for the DataDog API.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the site value (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "apiKey": {
                "type": "object",
                "description": "The API key for authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the API key value (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "applicationKey": {
                "type": "object",
                "description": "The application key for authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the application key value (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              }
            }
          }
        },
        "required": ["name", "version", "configuration"]
      }
    },
    "pagerduty": {
      "type": "array",
      "description": "PagerDuty integration for alerts and audits.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "PagerDuty connection name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "pagerduty"
          },
          "version": {
            "type": "integer",
            "description": "PagerDuty connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this PagerDuty connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "PagerDuty connection configuration.",
            "properties": {
              "integrationKey": {
                "type": "object",
                "description": "The integration key for authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the integration key value (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              }
            }
          }
        },
        "required": ["name", "version", "configuration"]
      }
    },
    "slack": {
      "type": "array",
      "description": "Slack integration for alerts and audits.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Slack connection name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "slack"
          },
          "version": {
            "type": "integer",
            "description": "Slack connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this Slack connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Slack connection configuration.",
            "properties": {
              "webhookUrl": {
                "type": "object",
                "description": "The webhook URL for the Slack API.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the webhook URL value (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              }
            },
            "required": ["webhookUrl"]
          }
        },
        "required": ["name", "version", "configuration"]
      }
    },
    "splunk": {
      "type": "array",
      "description": "Splunk integration for alerts and audits.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Splunk connection name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "splunk"
          },
          "version": {
            "type": "integer",
            "description": "Splunk connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this Splunk connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Splunk connection configuration.",
            "properties": {
              "host": {
                "type": "object",
                "description": "The host name for the Splunk API.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the host value (non empty).",
                    "pattern": "^.+$"
                  }
                },
                "required": ["value"]
              },
              "port": {
                "type": "object",
                "description": "The port number for the Splunk API.",
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "Enter the port value.",
                    "pattern": "^[0-9]+$"
                  }
                },
                "required": ["value"]
              },
              "useHttps": {
                "type": "object",
                "description": "Set to true in order to set the URL scheme to https. Will otherwise default to http.",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "Use HTTPS flag.",
                    "pattern": "^true|false$"
                  }
                },
                "required": ["value"]
              },
              "insecure": {
                "type": "object",
                "description": "Set to true in order to disable SSL verification.",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "Insecure flag.",
                    "pattern": "^true|false$"
                  }
                },
                "required": ["value"]
              },
              "token": {
                "type": "object",
                "description": "The token for authentication.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the token value (non empty).",
                    "pattern": "^[A-Za-z0-9_-]+$"
                  }
                },
                "required": ["value"]
              }
            }
          }
        },
        "required": ["name", "version", "configuration"]
      }
    },
    "alertManager": {
      "type": "array",
      "description": "Alert Manager integration for alerts.",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Alert Manager connection name. Must start with a letter or number and contain only alphanumeric characters or hyphens.",
            "pattern": "^[a-zA-Z0-9-]+$",
            "default": "my-alertmanager-connection"
          },
          "version": {
            "type": "integer",
            "description": "Alert Manager connection version.",
            "default": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for this Alert Manager connection.",
            "default": []
          },
          "configuration": {
            "type": "object",
            "description": "Alert Manager connection configuration.",
            "properties": {
              "endpoints": {
                "type": "object",
                "description": "Comma separated list of Alert Manager endpoints.",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Enter the end points value (non empty).",
                    "pattern": "^http://[A-Za-z0-9_-]+:[0-9]+$"
                  }
                },
                "required": ["value"]
              }
            },
            "required": ["endpoints"],
            "defaultSnippets": [
              {
                "label": "Alert Manager (minimal)",
                "body": {
                  "endpoints": {
                    "value": "http://alertmanager1:9093,http://alertmanager2:9093"
                  }
                }
              }
            ]
          }
        },
        "required": ["name", "version", "configuration"]
      }
    }
  },
  "defaultSnippets": [
    {
      "label": "HQ Connection",
      "body": {
        "lensesHq": [
          {
            "name": "lenses-hq",
            "version": 1,
            "tags": ["hq"],
            "configuration": {
              "server": {
                "value": "<YOUR_LENSES_HQ_SERVER_URL>"
              },
              "port": {
                "value": 10000
              },
              "agentKey": {
                "value": "<LENSES_HQ_AGENT_KEY>"
              }
            }
          }
        ]
      }
    },
    {
      "label": "HQ Connection TLS",
      "body": {
        "lensesHq": [
          {
            "name": "lenses-hq",
            "version": 1,
            "tags": ["hq"],
            "configuration": {
              "server": {
                "value": "<YOUR_LENSES_HQ_SERVER_URL>"
              },
              "port": {
                "value": 10000
              },
              "agentKey": {
                "value": "<LENSES_HQ_AGENT_KEY>"
              },
              "sslEnabled": {
                "value": true
              },
              "sslTruststore": {
                "file": ""
              },
              "sslTruststorePassword": {
                "value": ""
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka, Azure Eventhubs",
      "body": {
        "kafka": [
          {
            "name": "kafka",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "kafkaBootstrapServers": {
                "value": ["SASL_SSL://"]
              },
              "protocol": {
                "value": "SASL_SSL"
              },
              "saslMechanism": {
                "value": "PLAIN"
              },
              "saslJaasConfig": {
                "value": "org.apache.kafka.common.security.plain.PlainLoginModule required username=\\\"$ConnectionString\\\" password=\\\"Endpoint=sb://[SB_URL]/;SharedAccessKeyName=[KEY_NAME];SharedAccessKey=[ACCESS_KEY]\\\";"
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka, PLAINTEXT",
      "body": {
        "kafka": [
          {
            "name": "kafka",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "kafkaBootstrapServers": {
                "value": ["PLAINTEXT://"]
              },
              "protocol": {
                "value": "PLAINTEXT"
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsPort": {
                "# value": 9581
              },
              "# metricsType": {
                "# value": ""
              },
              "# metricsSsl": {
                "# value": false
              },
              "# metricsUsername": {
                "# value": ""
              },
              "# metricsPassword": {
                "# value": ""
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka, SASL_PLAINTEXT, PLAIN",
      "body": {
        "kafka": [
          {
            "name": "kafka",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "kafkaBootstrapServers": {
                "value": ["SASL_PLAINTEXT://"]
              },
              "protocol": {
                "value": "SASL_PLAINTEXT"
              },
              "saslMechanism": {
                "value": "PLAIN"
              },
              "saslJaasConfig": {
                "value": "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"admin\" password=\"admin-secret\";"
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsPort": {
                "# value": 9581
              },
              "# metricsType": {
                "# value": ""
              },
              "# metricsSsl": {
                "# value": false
              },
              "# metricsUsername": {
                "# value": ""
              },
              "# metricsPassword": {
                "# value": ""
              },
              "# metricsHttpTimeout": {
                "# value": 30000
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka, SASL_PLAINTEXT, SCRAM-SHA-256",
      "body": {
        "kafka": [
          {
            "name": "kafka",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "kafkaBootstrapServers": {
                "value": ["SASL_PLAINTEXT://"]
              },
              "protocol": {
                "value": "SASL_PLAINTEXT"
              },
              "saslMechanism": {
                "value": "SCRAM-SHA-256"
              },
              "saslJaasConfig": {
                "value": "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"admin\" password=\"admin-secret\";"
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsPort": {
                "# value": 9581
              },
              "# metricsType": {
                "# value": ""
              },
              "# metricsSsl": {
                "# value": false
              },
              "# metricsUsername": {
                "# value": ""
              },
              "# metricsPassword": {
                "# value": ""
              },
              "# metricsHttpTimeout": {
                "# value": 30000
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka, SASL_PLAINTEXT, SCRAM-SHA-512",
      "body": {
        "kafka": [
          {
            "name": "kafka",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "kafkaBootstrapServers": {
                "value": ["SASL_PLAINTEXT://"]
              },
              "protocol": {
                "value": "SASL_PLAINTEXT"
              },
              "saslMechanism": {
                "value": "SCRAM-SHA-512"
              },
              "saslJaasConfig": {
                "value": "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"admin\" password=\"admin-secret\";"
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsPort": {
                "# value": 9581
              },
              "# metricsType": {
                "# value": ""
              },
              "# metricsSsl": {
                "# value": false
              },
              "# metricsUsername": {
                "# value": ""
              },
              "# metricsPassword": {
                "# value": ""
              },
              "# metricsHttpTimeout": {
                "# value": 30000
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka & Confluent Cloud, SASL_SSL, PLAIN",
      "body": {
        "kafka": [
          {
            "name": "kafka",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "kafkaBootstrapServers": {
                "value": ["SASL_SSL://"]
              },
              "protocol": {
                "value": "SASL_SSL"
              },
              "# Optional: TLS/SSL": "Uncomment the properties below",
              "sslTruststore": {
                "file": "kafka-truststore.jks"
              },
              "sslTruststorePassword": {
                "value": ""
              },
              "# Optional: Uncomment below to enable mutual TLS/SSL": "Uncomment the properties below",
              "# sslKeystore": {
                "# file": "kafka-keystore.jks"
              },
              "# sslKeystorePassword": {
                "# value": ""
              },
              "saslMechanism": {
                "value": "PLAIN"
              },
              "saslJaasConfig": {
                "value": "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"admin\" password=\"admin-secret\";"
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsPort": {
                "# value": 9581
              },
              "# metricsType": {
                "# value": ""
              },
              "# metricsSsl": {
                "# value": true
              },
              "# metricsUsername": {
                "# value": ""
              },
              "# metricsPassword": {
                "# value": ""
              },
              "# metricsHttpTimeout": {
                "# value": 30000
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka, SASL_SSL, SCRAM-SHA-256",
      "body": {
        "kafka": [
          {
            "name": "kafka",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "kafkaBootstrapServers": {
                "value": ["SASL_SSL://"]
              },
              "protocol": {
                "value": "SASL_SSL"
              },
              "saslMechanism": {
                "value": "SCRAM-SHA-256"
              },
              "saslJaasConfig": {
                "value": "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"admin\" password=\"admin-secret\";"
              },
              "sslTruststore": {
                "file": "kafka-truststore.jks"
              },
              "sslTruststorePassword": {
                "value": ""
              },
              "# Optional: Uncomment below to enable mutual TLS/SSL": "Uncomment the properties below",
              "# sslKeystore": {
                "# file": "kafka-keystore.jks"
              },
              "# sslKeystorePassword": {
                "# value": ""
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsPort": {
                "# value": 9581
              },
              "# metricsType": {
                "# value": ""
              },
              "# metricsSsl": {
                "# value": true
              },
              "# metricsUsername": {
                "# value": ""
              },
              "# metricsPassword": {
                "# value": ""
              },
              "# metricsHttpTimeout": {
                "# value": 30000
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka, SASL_SSL, SCRAM-SHA-512",
      "body": {
        "kafka": [
          {
            "name": "kafka",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "kafkaBootstrapServers": {
                "value": ["SASL_SSL://"]
              },
              "protocol": {
                "value": "SASL_SSL"
              },
              "saslMechanism": {
                "value": "SCRAM-SHA-512"
              },
              "saslJaasConfig": {
                "value": "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"admin\" password=\"admin-secret\";"
              },
              "sslTruststore": {
                "file": "kafka-truststore.jks"
              },
              "sslTruststorePassword": {
                "value": ""
              },
              "# Optional: Uncomment below to enable mutual TLS/SSL": "Uncomment the properties below",
              "# sslKeystore": {
                "# file": "kafka-keystore.jks"
              },
              "# sslKeystorePassword": {
                "# value": ""
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsPort": {
                "# value": 9581
              },
              "# metricsType": {
                "# value": ""
              },
              "# metricsSsl": {
                "# value": true
              },
              "# metricsUsername": {
                "# value": ""
              },
              "# metricsPassword": {
                "# value": ""
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka, IBM Event Streams",
      "body": {
        "kafka": [
          {
            "name": "kafka",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "kafkaBootstrapServers": {
                "value": ["SASL_SSL://"]
              },
              "protocol": {
                "value": "SASL_SSL"
              },
              "saslMechanism": {
                "value": "PLAIN"
              },
              "saslJaasConfig": {
                "value": "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"token\" password=\"<API Key>\";"
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsPort": {
                "# value": 9581
              },
              "# metricsType": {
                "# value": ""
              },
              "# metricsSsl": {
                "# value": true
              },
              "# metricsUsername": {
                "# value": ""
              },
              "# metricsPassword": {
                "# value": ""
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka, AWS MSK (TLS/SSL)",
      "body": {
        "kafka": [
          {
            "name": "kafka",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "kafkaBootstrapServers": {
                "value": ["SSL://"]
              },
              "protocol": {
                "value": "SSL"
              },
              "sslTruststore": {
                "file": "kafka-truststore.jks"
              },
              "sslTruststorePassword": {
                "value": ""
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsType": {
                "# value": "AWS"
              },
              "# metricsHttpTimeout": {
                "# value": 60000
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka, AWS MSK (mutual TLS/SSL)",
      "body": {
        "kafka": [
          {
            "name": "kafka",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "kafkaBootstrapServers": {
                "value": ["SSL://"]
              },
              "protocol": {
                "value": "SSL"
              },
              "sslTruststore": {
                "file": "kafka-truststore.jks"
              },
              "sslTruststorePassword": {
                "value": ""
              },
              "sslKeystore": {
                "file": "kafka-keystore.jks"
              },
              "sslKeyPassword": {
                "value": ""
              },
              "sslKeystorePassword": {
                "value": ""
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsType": {
                "# value": "AWS"
              },
              "# metricsHttpTimeout": {
                "# value": 60000
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka, AWS MSK (IAM)",
      "body": {
        "kafka": [
          {
            "name": "kafka",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "kafkaBootstrapServers": {
                "value": ["SASL_SSL://"]
              },
              "protocol": {
                "value": "SASL_SSL"
              },
              "saslMechanism": {
                "value": "AWS_MSK_IAM"
              },
              "saslJaasConfig": {
                "value": "software.amazon.msk.auth.iam.IAMLoginModule required;"
              },
              "additionalProperties": {
                "value": {
                  "sasl.client.callback.handler.class": "software.amazon.msk.auth.iam.IAMClientCallbackHandler"
                }
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsType": {
                "# value": "AWS"
              },
              "# metricsHttpTimeout": {
                "# value": 60000
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka, SSL",
      "body": {
        "kafka": [
          {
            "name": "kafka",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "kafkaBootstrapServers": {
                "value": ["SSL://"]
              },
              "protocol": {
                "value": "SSL"
              },
              "sslTruststore": {
                "file": "kafka-truststore.jks"
              },
              "sslTruststorePassword": {
                "value": ""
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsPort": {
                "# value": 9581
              },
              "# metricsType": {
                "# value": ""
              },
              "# metricsSsl": {
                "# value": true
              },
              "# metricsUsername": {
                "# value": ""
              },
              "# metricsPassword": {
                "# value": ""
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka, mutual SSL/TLS",
      "body": {
        "kafka": [
          {
            "name": "kafka",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "kafkaBootstrapServers": {
                "value": ["SSL://"]
              },
              "protocol": {
                "value": "SSL"
              },
              "sslTruststore": {
                "file": "kafka-truststore.jks"
              },
              "sslTruststorePassword": {
                "value": ""
              },
              "sslKeystore": {
                "file": "kafka-keystore.jks"
              },
              "sslKeyPassword": {
                "value": ""
              },
              "sslKeystorePassword": {
                "value": ""
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsPort": {
                "# value": 9581
              },
              "# metricsType": {
                "# value": ""
              },
              "# metricsSsl": {
                "# value": true
              },
              "# metricsUsername": {
                "# value": ""
              },
              "# metricsPassword": {
                "# value": ""
              }
            }
          }
        ]
      }
    },
    {
      "label": "Zookeeper",
      "body": {
        "zookeeper": [
          {
            "name": "zookeeper",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "zookeeperUrls": {
                "value": ["localhost:2181"]
              },
              "# zookeeperChrootPath": {
                "# value": ""
              },
              "zookeeperSessionTimeout": {
                "value": 10000
              },
              "zookeeperConnectionTimeout": {
                "value": 10000
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsPort": {
                "# value": 9581
              },
              "# metricsType": {
                "# value": ""
              },
              "# metricsSsl": {
                "# value": true
              }
            }
          }
        ]
      }
    },
    {
      "label": "Kafka Connect",
      "body": {
        "connect": [
          {
            "name": "connect",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "workers": {
                "value": []
              },
              "username": {
                "value": ""
              },
              "password": {
                "value": ""
              },
              "# Optional: TLS/SSL": "Uncomment the properties below",
              "sslTruststore": {
                "file": "connect-truststore.jks"
              },
              "sslTruststorePassword": {
                "value": ""
              },
              "# Optional: Uncomment below to enable mutual TLS/SSL": "Uncomment the properties below",
              "# sslKeystore": {
                "# file": "keystore.jks"
              },
              "# sslKeystorePassword": {
                "# value": ""
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsPort": {
                "# value": 9581
              },
              "# metricsType": {
                "# value": ""
              },
              "# metricsSsl": {
                "# value": true
              },
              "# metricsUsername": {
                "# value": ""
              },
              "# metricsPassword": {
                "# value": ""
              },
              "# metricsHttpTimeout": {
                "# value": 30000
              }
            }
          }
        ]
      }
    },
    {
      "label": "Schema Registry, Confluent",
      "body": {
        "confluentSchemaRegistry": [
          {
            "name": "schema-registry",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "schemaRegistryUrls": {
                "value": []
              },
              "username": {
                "value": ""
              },
              "password": {
                "value": ""
              },
              "# Optional: TLS/SSL": "Uncomment the properties below",
              "# sslTruststore": {
                "# file": "truststore.jks"
              },
              "# sslTruststorePassword": {
                "# value": ""
              },
              "# Optional: Uncomment below to enable mutual SSL/TLS": "Uncomment the properties below",
              "# sslKeystore": {
                "# file": "keystore.jks"
              },
              "# sslKeystorePassword": {
                "# value": ""
              },
              "# Optional: Uncomment below to enable JMX metrics": "Uncomment the properties below",
              "# metricsPort": {
                "# value": 9581
              },
              "# metricsType": {
                "# value": ""
              },
              "# metricsSsl": {
                "# value": true
              },
              "# metricsUsername": {
                "# value": ""
              },
              "# metricsPassword": {
                "# value": ""
              },
              "# metricsHttpTimeout": {
                "# value": 30000
              }
            }
          }
        ]
      }
    },
    {
      "label": "Schema Registry, AWS Glue (Access Keys)",
      "body": {
        "aws": [
          {
            "name": "my-aws-connection-name",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "authMode": {
                "value": ""
              },
              "accessKeyId": {
                "value": ""
              },
              "secretAccessKey": {
                "value": ""
              },
              "region": {
                "value": "us-west-2"
              }
            }
          }
        ],
        "glueSchemaRegistry": [
          {
            "name": "schema-registry",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "authMode": {
                "reference": ""
              },
              "accessKeyId": {
                "reference": ""
              },
              "secretAccessKey": {
                "reference": ""
              },
              "glueRegistryArn": {
                "value": ""
              }
            }
          }
        ]
      }
    },
    {
      "label": "Schema Registry, AWS Glue (Credentials chain)",
      "body": {
        "aws": [
          {
            "name": "my-aws-connection-name",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "authMode": {
                "value": "Credentials Chain"
              },
              "region": {
                "value": ""
              }
            }
          }
        ],
        "glueSchemaRegistry": [
          {
            "name": "schema-registry",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "authMode": {
                "reference": ""
              },
              "glueRegistryArn": {
                "value": ""
              }
            }
          }
        ]
      }
    },
    {
      "label": "Schema Registry, AWS Glue (Assume Role)",
      "body": {
        "aws": [
          {
            "name": "my-aws-connection-name",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "authMode": {
                "value": "Assume Role"
              },
              "region": {
                "value": ""
              },
              "assumeRoleArn": {
                "value": ""
              },
              "assumeRoleSessionName": {
                "value": ""
              }
            }
          }
        ],
        "glueSchemaRegistry": [
          {
            "name": "schema-registry",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "authMode": {
                "reference": ""
              },
              "assumeRoleArn": {
                "reference": ""
              },
              "assumeRoleSessionName": {
                "reference": ""
              },
              "glueRegistryArn": {
                "value": ""
              }
            }
          }
        ]
      }
    },
    {
      "label": "Schema Registry, IBM Event Streams",
      "body": {
        "confluentSchemaRegistry": [
          {
            "name": "schema-registry",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "schemaRegistryUrls": {
                "value": ["https://token:<API Key>@<Host>/confluent"]
              }
            }
          }
        ]
      }
    },
    {
      "label": "Schema Registry, ApiCurio",
      "body": {
        "confluentSchemaRegistry": [
          {
            "name": "schema-registry",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "schemaRegistryUrls": {
                "value": ["http://my-sr.host1:8081/apis/compact/v6"]
              }
            }
          }
        ]
      }
    },
    {
      "label": "AWS Connection",
      "body": {
        "aws": [
          {
            "name": "my-aws-connection-name",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "authMode": {
                "value": ""
              },
              "region": {
                "value": ""
              }
            }
          }
        ]
      }
    },
    {
      "label": "Alerts & Audits, Webhook",
      "body": {
        "webhook": [
          {
            "name": "webhook",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "host": {
                "value": "webhook.example.com"
              },
              "port": {
                "value": 443
              },
              "useHttps": {
                "value": true
              },
              "creds": {
                "value": ["credential1", "credential2"]
              }
            }
          }
        ]
      }
    },
    {
      "label": "Alerts, DataDog",
      "body": {
        "datadog": [
          {
            "name": "datadog",
            "version": "1",
            "tags": "[]",
            "configuration": {
              "site": {
                "value": "datadoghq.com"
              },
              "apiKey": {
                "value": ""
              },
              "applicationKey": {
                "value": ""
              }
            }
          }
        ]
      }
    },
    {
      "label": "Alerts, PagerDuty",
      "body": {
        "pagerduty": [
          {
            "name": "pagerduty",
            "version": "1",
            "tags": "[]",
            "configuration": {
              "integrationKey": {
                "value": ""
              }
            }
          }
        ]
      }
    },
    {
      "label": "Alerts, Slack",
      "body": {
        "slack": [
          {
            "name": "slack",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "webhookUrl": {
                "value": ""
              }
            }
          }
        ]
      }
    },
    {
      "label": "Alerts & Audits, Splunk",
      "body": {
        "splunk": [
          {
            "name": "splunk",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "host": {
                "value": "splunk.example.com"
              },
              "port": {
                "value": 8089
              },
              "useHttps": {
                "value": true
              },
              "insecure": {
                "value": false
              },
              "token": {
                "value": ""
              }
            }
          }
        ]
      }
    },
    {
      "label": "Alerts, Alert Manager",
      "body": {
        "alertmanager": [
          {
            "name": "my-alertmanager-connection",
            "version": 1,
            "tags": "[]",
            "configuration": {
              "endpoints": {
                "value": "http://alertmanager1:9093,http://alertmanager2:9093"
              }
            }
          }
        ]
      }
    }
  ],
  // "required": ["kafka", "lensesHq"],
  "dependencies": {
    "glueSchemaRegistry": ["aws"]
  }
}
